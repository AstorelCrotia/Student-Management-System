#include "head.h"

void Drawing() // 彩票开奖
{
    int i = 0;
    int randomNum[5] = {0};
    char randomStr[20] = "\0";
    srand(time(NULL));
    for (int i = 0; i < 5; i++)
    {
        randomNum[i] = rand() % 100;
    }
    snprintf(randomStr, sizeof(randomStr), "%02d %02d %02d %02d %02d : %02d", randomNum[0], randomNum[1], randomNum[2], randomNum[3], randomNum[4], rand() % 100);
    int i = 0;
    Lottery *head = NULL;
    Lottery *temp = NULL;
    Lottery *lottery = (Lottery *)malloc(sizeof(Lottery));
    if (lottery == NULL)
    {
        printf("============================\n");
        printf("|  内存分配失败！          |\n");
        printf("============================\n");
        return;
    }
    FILE *file_read = fopen("lottery.txt", "r");
    if (file_read == NULL)
    {
        printf("============================\n");
        printf("|  连接服务器失败！        |\n");
        printf("============================\n");
        return;
    }
    while (fread(lottery, sizeof(Lottery), 1, file_read) == 1)
    {
        lottery->next = NULL;
        if (head == NULL)
        {
            head = lottery;
            temp = lottery;
        }
        else
        {
            temp->next = lottery;
            temp = lottery;
        }
        lottery = (Lottery *)malloc(sizeof(Lottery));
        if (lottery == NULL)
        {
            printf("============================\n");
            printf("|  内存分配失败！          |\n");
            printf("============================\n");
            return;
        }
    }
    fclose(file_read);
    free(lottery);
    temp = head;
    printf("====================================\n");
    printf("|  请选择你要开奖的彩票！         |\n");
    printf("|                                |\n");
    printf("|  bbg彩输入“1”                  |\n");
    printf("|                                |\n");
    printf("|  A彩输入“2”                    |\n");
    printf("|                                |\n");
    printf("|  B彩输入“3”                    |\n");
    printf("|                                |\n");
    printf("|  退出系统输入其他              |\n");
    printf("====================================\n");
    printf("你的输入：");
    scanf("%d", &i);
    while (temp != NULL)
    {
        if (strcmp(input, temp->uid) == 0)
        {
            while (1)
            {
                printf("============================\n");
                printf("请输入用户的新密码：");
                scanf("%19s", code1);
                printf("============================\n");
                printf("请再次输入用户的新密码：");
                scanf("%19s", code2);
                if (strcmp(code1, code2) == 0)
                {
                    strcpy(temp->code, code1);
                    printf("============================\n");
                    printf("|  修改密码成功！          |\n");
                    printf("============================\n");
                    break;
                }
                else
                {
                    printf("============================\n");
                    printf("|  密码输入不一请重新尝试！ |\n");
                    printf("============================\n");
                }
            }
            i = 1;
            break;
        }
        temp = temp->next;
        i = 0;
    }
    if (i == 0)
    {
        printf("================================\n");
        printf("|  没有找到用户名为%s的用户!    |\n", input);
        printf("================================\n");
        temp = head;
        while (temp != NULL)
        {
            Lottery *toFree = temp;
            temp = temp->next;
            free(toFree);
        }
        head = NULL;
        return;
    }
    FILE *file_write = fopen("lottery.txt", "w");
    if (file_write == NULL)
    {
        printf("============================\n");
        printf("|  连接服务器失败！        |\n");
        printf("============================\n");
        return;
    }
    temp = head;
    while (temp != NULL)
    {
        fwrite(temp, sizeof(Lottery), 1, file_write);
        temp = temp->next;
    }
    fclose(file_write);
    temp = head;
    while (temp != NULL)
    {
        Lottery *toFree = temp;
        temp = temp->next;
        free(toFree);
    }
    head = NULL;
    return;
}